{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport post from \"./post\";\nvar initialState = {\n  user: {},\n  post: {}\n};\nvar changeNickname = {\n  type: \"CHANGE_NICKNAME\",\n  data: \"boogicho\"\n};\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    switch (action.type) {\n      case HYDRATE:\n        return _objectSpread(_objectSpread({}, state), action.payload);\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","combineReducers","user","post","initialState","changeNickname","type","data","rootReducer","index","state","arguments","length","undefined","action","_objectSpread","payload"],"sources":["/Users/laon/Desktop/react-nodebird/prepare/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport post from \"./post\";\n\nconst initialState = {\n  user: {},\n  post: {},\n};\n\nconst changeNickname = {\n  type: \"CHANGE_NICKNAME\",\n  data: \"boogicho\",\n};\n\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        return { ...state, ...action.payload };\n      default:\n        return state;\n    }\n  },\n  user,\n  post,\n});\n\nexport default rootReducer;\n"],"mappings":";;;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,eAAe,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAEzB,IAAMC,YAAY,GAAG;EACnBF,IAAI,EAAE,CAAC,CAAC;EACRC,IAAI,EAAE,CAAC;AACT,CAAC;AAED,IAAME,cAAc,GAAG;EACrBC,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE;AACR,CAAC;AAED,IAAMC,WAAW,GAAGP,eAAe,CAAC;EAClCQ,KAAK,EAAE,SAAAA,MAAA,EAAwB;IAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IACxB,QAAQC,MAAM,CAACR,IAAI;MACjB,KAAKN,OAAO;QACV,OAAAe,aAAA,CAAAA,aAAA,KAAYL,KAAK,GAAKI,MAAM,CAACE,OAAO;MACtC;QACE,OAAON,KAAK;IAChB;EACF,CAAC;EACDR,IAAI,EAAJA,IAAI;EACJC,IAAI,EAAJA;AACF,CAAC,CAAC;AAEF,eAAeK,WAAW"},"metadata":{},"sourceType":"module"}
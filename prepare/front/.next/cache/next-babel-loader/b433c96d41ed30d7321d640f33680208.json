{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/laon/Desktop/react-nodebird/prepare/front/components/PostCardContent.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nvar PostCardContent = function PostCardContent(_ref) {\n  var postData = _ref.postData;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, postData.split(/(#[^\\s#]+)/g).map(function (v, i) {\n    if (v.match(/(#[^\\s#]+)/)) {\n      return __jsx(Link, {\n        href: \"/hashtag/\".concat(v.slice(1), \" key=\").concat(i),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 24\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 71\n        }\n      }, v));\n    }\n    return v;\n  }));\n};\n_c = PostCardContent;\nPostCardContent.PropTypes = {\n  postData: PropTypes.string.isRequired\n};\nexport default PostCardContent;\nvar _c;\n$RefreshReg$(_c, \"PostCardContent\");","map":{"version":3,"names":["React","Link","PropTypes","PostCardContent","_ref","postData","__jsx","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","split","map","v","i","match","href","concat","slice","_c","string","isRequired","$RefreshReg$"],"sources":["/Users/laon/Desktop/react-nodebird/prepare/front/components/PostCardContent.js"],"sourcesContent":["import React from 'react'\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\n\nconst PostCardContent = ({postData}) => {\n  return (\n    <div>\n        {postData.split(/(#[^\\s#]+)/g).map((v, i) => {\n            if(v.match(/(#[^\\s#]+)/)){\n                return <Link href={`/hashtag/${v.slice(1)} key=${i}`}><a>{v}</a></Link>\n            }\n            return v;\n        })}\n    </div>\n  )\n}\n\nPostCardContent.PropTypes = {\n    postData: PropTypes.string.isRequired\n}\n\nexport default PostCardContent"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,SAAS,MAAM,YAAY;AAElC,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAAmB;EAAA,IAAdC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAChC,OACEC,KAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACKR,QAAQ,CAACS,KAAK,CAAC,aAAa,CAAC,CAACC,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;IACzC,IAAGD,CAAC,CAACE,KAAK,CAAC,YAAY,CAAC,EAAC;MACrB,OAAOZ,KAAA,CAACL,IAAI;QAACkB,IAAI,cAAAC,MAAA,CAAcJ,CAAC,CAACK,KAAK,CAAC,CAAC,CAAC,WAAAD,MAAA,CAAQH,CAAC,CAAG;QAAAV,MAAA,EAAAC,KAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAACP,KAAA;QAAAC,MAAA,EAAAC,KAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAIG,CAAK,CAAO,CAAC;IAC3E;IACA,OAAOA,CAAC;EACZ,CAAC,CACA,CAAC;AAEV,CAAC;AAAAM,EAAA,GAXKnB,eAAe;AAarBA,eAAe,CAACD,SAAS,GAAG;EACxBG,QAAQ,EAAEH,SAAS,CAACqB,MAAM,CAACC;AAC/B,CAAC;AAED,eAAerB,eAAe;AAAA,IAAAmB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module"}